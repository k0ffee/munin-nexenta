#! /usr/bin/env perl

use strict;
use warnings;

#
# A Munin plugin.
#
# Fetches storage device I/O utilisation via SNMP.
#

my $host = exists $ENV{'host'} ? $ENV{'host'} : 'localhost';

my $oid_subtree = '.1.3.6.1.4.1.2021.13.15'; # UC Davis disk MIB

if (exists $ARGV[0] and $ARGV[0] eq 'autoconf') {
    print "yes\n";
    exit 0;
}

open(my $mib, "-|", "snmpwalk -v2c -c public -- $host $oid_subtree")
    or die "cannot open: $!";

my (@io_read, @io_write);

while (<$mib>) {
    if (/^UCD-DISKIO-MIB::diskIONReadX\./)    { pushv (\@io_read) }
    if (/^UCD-DISKIO-MIB::diskIONWrittenX\./) { pushv (\@io_write) }
}

my $offset = 0;

if (exists $ARGV[0] and $ARGV[0] eq "config") {
    print "graph_title device I/O\n";
    print "graph_args --base 1024 -l 0\n";
    print "graph_vlabel bytes read(+)/written(-)\n";
    print "graph_category disk\n";
    print "graph_info I/O to and from block devices\n";

    foreach my $io_read (@io_read) {
        print "io_read_$offset.label d$offset\n";
        print "io_read_$offset.type DERIVE\n";
        print "io_read_$offset.graph no\n";
        print "io_read_$offset.min 0\n";
        $offset++;
    }

    $offset = 0;

    foreach my $io_write (@io_write) {
        print "io_write_$offset.label d$offset\n";
        print "io_write_$offset.type DERIVE\n";
        print "io_write_$offset.negative io_read_$offset\n";
        print "io_write_$offset.min 0\n";
        $offset++;
    }

    exit 0;
}

$offset = 0;

foreach my $io_read (@io_read) {
    print "io_read_$offset.value $io_read\n";
    $offset++;
}

$offset = 0;

foreach my $io_write (@io_write) {
    print "io_write_$offset.value $io_write\n";
    $offset++;
}

sub getv {
    chomp; s/.*\s//;
}

sub pushv {
    my ($arg1) = @_;
    getv; push @$arg1, $_;
}

