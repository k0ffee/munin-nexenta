#! /usr/bin/env perl

use strict;
use warnings;

#
# A Munin plugin.
#
# Fetches interrupt and context switch CPU utilisation via SNMP.
#

my $host = exists $ENV{'host'} ? $ENV{'host'} : 'localhost';

my $oid_subtree = '.1.3.6.1.4.1.2021.11'; # UC Davis MIB

if (exists $ARGV[0] and $ARGV[0] eq 'autoconf') {
    print "yes\n";
    exit 0;
}

if (exists $ARGV[0] and $ARGV[0] eq "config") {
    print "graph_title Interrupts and context switches\n";
    print "graph_args --lower-limit 0\n";
    print "graph_vlabel per second\n";
    print "graph_scale no\n";
    print "graph_info Interrupts and context switches per second\n";
    print "graph_category system\n";

    print "intr.label intr\n";
    print "intr.min 0\n";
    print "intr.info Iterrupts per second.\n";

    print "ctx.label ctx\n";
    print "ctx.min 0\n";
    print "ctx.info Context switches per second\n";

    exit 0;
}

open(my $mib, "-|", "snmpwalk -v2c -c public -- $host $oid_subtree")
    or die "cannot open: $!";

my (@intr, @ctx);

while (<$mib>) {
    if (/^UCD-SNMP-MIB::ssSysInterrupts\./) { pushv (\@intr) }
    if (/^UCD-SNMP-MIB::ssSysContext\./)    { pushv (\@ctx) }
}

print "intr.value $intr[0]\n";
print "ctx.value $ctx[0]\n";

sub getv {
    chomp; s/.*\s+(\d+)\s+\S+/$1/;
}

sub pushv {
    my ($arg1) = @_;
    getv; push @$arg1, $_;
}
